/*!
 * classie v1.0.1
 * class helper functions
 * from bonzo https://github.com/ded/bonzo
 * MIT license
 * 
 * classie.has( elem, 'my-class' ) -> true/false
 * classie.add( elem, 'my-new-class' )
 * classie.remove( elem, 'my-unwanted-class' )
 * classie.toggle( elem, 'my-class' )
 */
!function(e){"use strict";function s(e){return new RegExp("(^|\\s+)"+e+"(\\s+|$)")}function n(e,s){var n=i(e,s)?o:t;n(e,s)}var i,t,o;"classList"in document.documentElement?(i=function(e,s){return e.classList.contains(s)},t=function(e,s){e.classList.add(s)},o=function(e,s){e.classList.remove(s)}):(i=function(e,n){return s(n).test(e.className)},t=function(e,s){i(e,s)||(e.className=e.className+" "+s)},o=function(e,n){e.className=e.className.replace(s(n)," ")});var a={hasClass:i,addClass:t,removeClass:o,toggleClass:n,has:i,add:t,remove:o,toggle:n};"function"==typeof define&&define.amd?define(a):"object"==typeof exports?module.exports=a:e.classie=a}(window),function(){var e,s,n,i,t,o,a,r;e=document.body,n=document.getElementById("js-overlay-open"),i=document.getElementById("js-overlay"),s=document.getElementById("js-overlay-close"),r={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",msTransition:"MSTransitionEnd",OTransition:"oTransitionEnd",transition:"transitionend"},a=r[Modernizr.prefixed("transition")],t={transitions:Modernizr.csstransitions},o=function(){var s;return classie.has(i,"is-opened")?(classie.remove(i,"is-opened"),classie.remove(e,"is-locked"),classie.add(i,"is-closed"),s=function(n){if(t.transitions){if("visibility"!==n.propertyName)return;this.removeEventListener(a,s)}return classie.remove(i,"is-closed"),classie.remove(e,"is-locked")},t.transitions?i.addEventListener(a,s):s()):classie.has(i,"is-closed")?void 0:(classie.add(i,"is-opened"),classie.add(e,"is-locked"))},n.addEventListener("click",o),s.addEventListener("click",o)}.call(this);